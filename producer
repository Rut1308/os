#include<stdio.h>

#include<stdlib.h>

#include<unistd.h>

#include<semaphore.h>

#include<pthread.h>



sem_t e,f,s;

int in=0,out=0;

int buff[5];



void* producer(void* arg)

{

 sem_wait(&e);

 sem_wait(&s);

 int data=rand();

 buff[in]=data;

 printf("\nProduct %d produced by %lu successfully",data,pthread_self());

 in=(in+1)%5;

 sem_post(&s);

 sem_post(&f);

 sleep(5);

 return NULL;

}

void* consumer(void* arg)

{

 int conti=5;

 int data;

 do

 {

  sem_wait(&f);

  sem_wait(&s);

  int data=buff[out];

  printf("\nProduct %d consumed by %lu successfully",data,pthread_self());

  out=(out+1)%5;

  sem_post(&s);

  sem_post(&e);

  sleep(5); 

 }

 while(conti!=5);

 return NULL;

} 

int main()

{

 pthread_t tid[5],ctid;

 sem_init(&f,0,0);

 sem_init(&e,0,5);

 sem_init(&s,0,1);

 

 for(int i=0;i<5;i++)

 {

  pthread_create(&tid[i],NULL,producer,NULL);

 }

 pthread_create(&ctid,NULL,consumer,NULL);

 for(int i=0;i<5;i++)

 {

  pthread_join(tid[i],NULL);

 }

 pthread_join(ctid,NULL);

}    
